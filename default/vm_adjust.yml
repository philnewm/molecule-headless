---

- name: Get VM IDs
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      VBoxManage list runningvms | sed 's/"//g' | awk '{print $1}'
  args:
    executable: /bin/bash
  register: runningvms
  changed_when: false
  delegate_to: localhost

- name: Set default resolution
  loop: "{{ runningvms.stdout_lines }}"
  ansible.builtin.command:
    cmd: "VBoxManage controlvm {{ item }} setvideomodehint 1920 1080 32"
  register: result
  changed_when: not result.rc
  delegate_to: localhost

- name: Remove obsolete firmware
  become: true
  ansible.builtin.package:
    name: "linux-firmware"
    state: "absent"
    autoremove: true

- name: Disable auto updates on ubuntu
  when: ansible_distribution == "Ubuntu"
  block:
    - name: Disable unattended upgrades
      become: true
      ansible.builtin.systemd_service:
        name: unattended-upgrades.service
        state: stopped
        enabled: false

    - name: Disable apt-daily services
      become: true
      ansible.builtin.systemd_service:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - apt-daily.service
        - apt-daily.timer
        - apt-daily-upgrade.service
        - apt-daily-upgrade.timer

...
